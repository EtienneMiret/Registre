<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns="http://www.springframework.org/schema/security"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

  <http entry-point-ref="authenticationEntryPoint">
    <intercept-url pattern="/error/forbidden" access="isAuthenticated()"/>
    <intercept-url pattern="/**" access="hasRole('USER')"/>
    <custom-filter before="PRE_AUTH_FILTER" ref="openidConnectAuthenticationFilter"/>
    <headers/>
    <logout logout-url="/logout" invalidate-session="true" delete-cookies="JSESSIONID"/>
    <access-denied-handler error-page="/error/forbidden"/>
  </http>

  <authentication-manager id="authenticationManager">
    <authentication-provider ref="authenticationProvider"/>
  </authentication-manager>

  <context:component-scan base-package="fr.elimerl.registre.security"/>

  <beans:bean id="authenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
    <beans:constructor-arg name="loginFormUrl" value="/login"/>
  </beans:bean>

  <beans:bean id="openidConnectAuthenticationFilter" class="org.mitre.openid.connect.client.OIDCAuthenticationFilter">
    <beans:property name="authenticationManager" ref="authenticationManager"/>
    <beans:property name="issuerService" ref="issuerService"/>
    <beans:property name="serverConfigurationService" ref="serverConfigurationService"/>
    <beans:property name="clientConfigurationService" ref="clientConfigurationService"/>
    <beans:property name="authRequestUrlBuilder" ref="authRequestUrlBuilder"/>
    <beans:property name="filterProcessesUrl" value="/login"/>
  </beans:bean>

  <beans:bean id="issuerService" class="org.mitre.openid.connect.client.service.impl.StaticSingleIssuerService">
    <beans:property name="issuer" value="https://accounts.google.com"/>
  </beans:bean>

  <beans:bean id="serverConfigurationService" class="org.mitre.openid.connect.client.service.impl.DynamicServerConfigurationService"/>

  <beans:bean id="clientConfigurationService" class="org.mitre.openid.connect.client.service.impl.StaticClientConfigurationService">
    <beans:property name="clients">
      <beans:map>
        <beans:entry key="https://accounts.google.com" value-ref="googleConfiguration"/>
      </beans:map>
    </beans:property>
  </beans:bean>

  <beans:bean id="authRequestUrlBuilder" class="org.mitre.openid.connect.client.service.impl.PlainAuthRequestUrlBuilder"/>

  <beans:bean id="googleConfiguration" class="org.mitre.oauth2.model.RegisteredClient">
    <beans:property name="clientName" value="Registre"/>
    <beans:property name="clientId">
      <jee:jndi-lookup jndi-name="clientId"/>
    </beans:property>
    <beans:property name="clientSecret">
      <jee:jndi-lookup jndi-name="clientSecret"/>
    </beans:property>
    <beans:property name="scope">
      <beans:set>
        <beans:value>openid</beans:value>
        <beans:value>email</beans:value>
      </beans:set>
    </beans:property>
    <beans:property name="redirectUris">
      <beans:set>
        <jee:jndi-lookup jndi-name="redirectUri"/>
      </beans:set>
    </beans:property>
  </beans:bean>

  <beans:bean class="org.mitre.openid.connect.client.UserInfoFetcher"/>

</beans:beans>
